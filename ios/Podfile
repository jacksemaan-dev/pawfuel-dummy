platform :ios, '13.0'

# --- Robust Flutter SDK detection (works locally & on CI) ---
def read_flutter_root_from_generated
  generated = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated)
    raise "Missing #{generated}. Run 'flutter pub get' first to generate it."
  end
  File.foreach(generated) do |line|
    match = line.match(/FLUTTER_ROOT\=(.*)/)
    return match[1].strip if match
  end
  raise 'FLUTTER_ROOT not found in Generated.xcconfig'
end

flutter_root = ENV['FLUTTER_ROOT'] || read_flutter_root_from_generated
require File.expand_path(File.join(flutter_root, 'packages', 'flutter_tools', 'bin', 'podhelper'))

# Sets up Flutter’s CocoaPods integration
flutter_ios_podfile_setup

target 'Runner' do
  # Stable combo with Flutter + Swift plugins
  use_frameworks! :linkage => :static
  use_modular_headers!

  # Installs Flutter engine + plugin pods for Runner
  flutter_install_all_ios_pods(File.dirname(File.realpath(__FILE__)))
end

post_install do |installer|
  # Keep your global tweaks
  installer.pods_project.targets.each do |t|
    t.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
      config.build_settings['ENABLE_BITCODE'] = 'NO'
    end
  end

  # ✅ Use the per-target variant for maximum compatibility
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
  end
end
